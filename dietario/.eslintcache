[{"/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/index.js":"1","/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/App.js":"2","/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/reportWebVitals.js":"3","/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/Dieta.jsx":"4","/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/MaterialExample.js":"5","/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/Home.jsx":"6","/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/utils.js":"7","/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/Component/listWrapper/index.js":"8"},{"size":500,"mtime":1611783520168,"results":"9","hashOfConfig":"10"},{"size":614,"mtime":1611878233223,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611783520168,"results":"12","hashOfConfig":"10"},{"size":3539,"mtime":1611783520167,"results":"13","hashOfConfig":"10"},{"size":579,"mtime":1611783520167,"results":"14","hashOfConfig":"10"},{"size":1057,"mtime":1611871692718,"results":"15","hashOfConfig":"10"},{"size":2146,"mtime":1611783520168,"results":"16","hashOfConfig":"10"},{"size":242,"mtime":1611878273154,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ob9sem",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/index.js",[],["37","38"],"/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/App.js",["39"],"/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/reportWebVitals.js",[],"/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/Dieta.jsx",["40"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Box, Grid, Typography } from '@material-ui/core'\nimport { DataGrid } from '@material-ui/data-grid';\nimport TypoGraphy from '@material-ui/core/Typography'\nimport { valoresDiarios } from './utils.js'\n\n\nconst TabelaValoresDiarios = props => {\n\n    const cols2 = [\n        { field: 'nome', headerName: 'Nutriente', width: 130 },\n        { field: 'selecionado', headerName: 'Selecionado', type: 'number', width: 130 },\n        { field: 'recomendado', headerName: 'Recomendado', type: 'number', width: 130 },\n        { field: 'unidade', headerName: 'Unidade', width: 130 },\n      ];\n\n    const rows = valoresDiarios.map((item) => {\n        return {id: item.id, nome: item.nome, selecionado: 0, recomendado: item.valor, unidade: item.unidade}\n    })\n    console.log(rows)\n    return (\n        <>\n            <TypoGraphy variant=\"h3\" component=\"h2\" >\n            Valores Diários\n            </TypoGraphy>\n            <DataGrid rows={rows} columns={cols2} /> \n        </>\n    )\n}\n\n// este componente é a interface que contém o que será exibido na tela\n\nconst Dieta = props => {\n\n    // mock data\n    const columns = [\n        {\n            field: 'nome',\n            headerName: 'Alimento',\n            description: 'Nome do alimento',\n            sortable: true,\n            width: 160,\n            //valueGetter: (params) =>\n            //  `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n          },\n        { field: 'id', headerName: 'ID', type: 'number', width: 70 },\n        { field: 'calorias', headerName: 'Calorias', type: 'number', width: 130 },\n        { field: 'gordura', headerName: 'Gorduras', type: 'number', width: 130 },\n        { field: 'carboidratos', headerName: 'Carboidratos', type: 'number', width: 130 },\n        { field: 'proteinas', headerName: 'Proteinas', type: 'number', width: 130 },\n      ];\n      \n    const rows = [\n        { id: 1, nome: 'Frozen yoghurt', calorias: 159, gordura: 6.0, carboidratos: 24, proteinas: 4.0},\n        { id: 2, nome: 'Ice cream sandwich', calorias: 237, gordura: 9.0, carboidratos: 37, proteinas: 4.3},\n        { id: 3, nome: 'Eclair', calorias: 262, gordura: 16.0,carboidratos:  24, proteinas:  6.0},\n        { id: 4, nome: 'Cupcake', calorias:  305, gordura: 3.7, carboidratos: 67, proteinas: 4.3},\n        { id: 5, nome: 'Gingerbread', calorias: 356, gordura: 16.0,carboidratos:  49,proteinas:  3.9},\n      ];\n    ///\n\n    return (\n        <>\n            <Grid container spacing={3} style={{ width: '90%' }} justify=\"center\">\n                <Grid item xs={8} style={{ height: 400 }}>\n                    <TypoGraphy variant=\"h3\" component=\"h2\">\n                    Selecionados\n                    </TypoGraphy>\n                    <DataGrid rows={rows} columns={columns} checkboxSelection />  \n                </Grid>\n                <Grid item xs={4} style={{ height: 400 }}>\n                    <TabelaValoresDiarios />\n                </Grid>\n                <Grid item xs={12} style={{ height: 400, width: '60%' }}>\n                    <Box><TypoGraphy variant=\"h3\" component=\"h2\">\n                    Recomendados\n                    </TypoGraphy></Box>\n                    <DataGrid rows={rows} columns={columns} checkboxSelection /> \n                </Grid>\n            </Grid>\n            <p>Imprimir</p>\n            <Link to={{ pathname: \"/\" }} className=\"home-button\">\n            \"Voltar pra Home\"\n            </Link>  \n        </>\n    )\n}\n\nexport default Dieta\n","/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/MaterialExample.js",[],"/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/Home.jsx",["41","42"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Box } from '@material-ui/core'\nimport TypoGraphy from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Home = props => {\n\n    const useStyles = makeStyles({\n        root: {\n          width: '100%',\n          maxWidth: 500,\n        },\n      });\n      \n    const classes = useStyles();\n\n    return (\n        <Container>\n            <div id=\"home-header\">\n                <TypoGraphy variant=\"h1\" component=\"h2\" gutterBottom>\n                Dietário\n                </TypoGraphy>\n                <TypoGraphy variant=\"h3\" component=\"h2\" gutterBottom>\n                Um planejador de dietas saudáveis!\n                </TypoGraphy>\n            </div>\n        \n            <div className=\"home-main\">\n                <Link variant=\"button\" to={{ pathname: \"/dieta\" }} className=\"home-button\">\n                    \"Crie sua Dieta aqui!\"\n                </Link>\n            </div>\n        </Container>\n    )\n}\n\nexport default Home\n","/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/utils.js",[],"/Users/henrytamekloe/Documents/Github/engsoft-TP/dietario/src/Component/listWrapper/index.js",["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":3,"column":21,"nodeType":"51","messageId":"52","endLine":3,"endColumn":31},{"ruleId":"49","severity":1,"message":"54","line":3,"column":21,"nodeType":"51","messageId":"52","endLine":3,"endColumn":24},{"ruleId":"49","severity":1,"message":"55","line":16,"column":11,"nodeType":"51","messageId":"52","endLine":16,"endColumn":18},{"ruleId":"49","severity":1,"message":"56","line":2,"column":21,"nodeType":"51","messageId":"52","endLine":2,"endColumn":30},{"ruleId":"49","severity":1,"message":"57","line":2,"column":31,"nodeType":"51","messageId":"52","endLine":2,"endColumn":35},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Box' is defined but never used.","'classes' is assigned a value but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]